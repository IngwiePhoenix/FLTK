//
// "$Id: ide_support_ui.fl 6614 2009-01-01 16:11:32Z matt $"
//
// Setting and shell dialogs for the Fast Light Tool Kit (FLTK).
//
// Copyright 1998-2009 by Bill Spitzak and others.
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Library General Public License for more details.
//
// You should have received a copy of the GNU Library General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
// USA.
//
// Please report all bugs and problems on the following page:
//
//     http://www.fltk.org/str.php
//

// generated by Fast Light User Interface Designer (fluid) version 1.0300

#include "ide_support_ui.h"
#include "ide_support.h"
#include <FL/Fl_File_Chooser.H>

Fl_Double_Window *dbmanager_window=(Fl_Double_Window *)0;

Fl_Tree *dbmanager_tree=(Fl_Tree *)0;

static void cb_Open(Fl_Button*, void*) {
  const char *filename = fl_file_chooser("Load Database", "*.db", 0, 0);
if (filename) {
  ui_load_database(filename);
};
}

static void cb_New(Fl_Button*, void*) {
  const char *filename = fl_file_chooser("Load Database", "*.db", 0, 0);
if (filename) {
  ui_load_database(filename);
};
}

Fl_Wizard *dbm_wizard=(Fl_Wizard *)0;

Fl_Group *dbm_empty=(Fl_Group *)0;

Fl_Group *dbm_app=(Fl_Group *)0;

Fl_Input *dbm_app_name=(Fl_Input *)0;

Fl_Group *dbm_lib=(Fl_Group *)0;

Fl_Input *dbm_lib_name=(Fl_Input *)0;

Fl_Group *dbm_test=(Fl_Group *)0;

Fl_Input *dbm_test_name=(Fl_Input *)0;

Fl_Group *dbm_sources=(Fl_Group *)0;

Fl_Group *dbm_source=(Fl_Group *)0;

Fl_Double_Window* make_dbmanager_window() {
  { dbmanager_window = new Fl_Double_Window(427, 500);
    { dbmanager_tree = new Fl_Tree(8, 8, 200, 480);
      dbmanager_tree->box(FL_DOWN_BOX);
      dbmanager_tree->color((Fl_Color)55);
      dbmanager_tree->selection_color(FL_BACKGROUND_COLOR);
      dbmanager_tree->labeltype(FL_NORMAL_LABEL);
      dbmanager_tree->labelfont(0);
      dbmanager_tree->labelsize(14);
      dbmanager_tree->labelcolor(FL_FOREGROUND_COLOR);
      dbmanager_tree->align(Fl_Align(FL_ALIGN_CENTER));
      dbmanager_tree->when(FL_WHEN_CHANGED);
      Fl_Group::current()->resizable(dbmanager_tree);
      dbmanager_tree->showroot(0);
    } // Fl_Tree* dbmanager_tree
    { Fl_Group* o = new Fl_Group(216, 8, 200, 444);
      { Fl_Group* o = new Fl_Group(224, 364, 184, 79);
        o->end();
        Fl_Group::current()->resizable(o);
      } // Fl_Group* o
      { Fl_Button* o = new Fl_Button(240, 52, 152, 28, "Open Database...");
        o->callback((Fl_Callback*)cb_Open);
      } // Fl_Button* o
      { Fl_Button* o = new Fl_Button(240, 16, 152, 28, " (New Database... )");
        o->callback((Fl_Callback*)cb_New);
        o->deactivate();
      } // Fl_Button* o
      { dbm_wizard = new Fl_Wizard(216, 92, 200, 272);
        dbm_wizard->box(FL_ENGRAVED_BOX);
        { dbm_empty = new Fl_Group(216, 92, 200, 272);
          dbm_empty->hide();
          dbm_empty->end();
        } // Fl_Group* dbm_empty
        { dbm_app = new Fl_Group(216, 92, 200, 272);
          dbm_app->hide();
          { dbm_app_name = new Fl_Input(280, 108, 111, 24, "(Name:)");
            dbm_app_name->deactivate();
          } // Fl_Input* dbm_app_name
          { Fl_Button* o = new Fl_Button(240, 140, 152, 28, " (New Source... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 176, 152, 28, " (Add Source... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 212, 152, 28, " (Add Library... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 248, 152, 28, " (Add Dependency... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 284, 152, 28, " (Add External Item... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 320, 152, 28, " (Remove Test...)");
            o->deactivate();
          } // Fl_Button* o
          dbm_app->end();
        } // Fl_Group* dbm_app
        { dbm_lib = new Fl_Group(216, 92, 200, 272);
          dbm_lib->hide();
          { dbm_lib_name = new Fl_Input(280, 108, 111, 24, "(Name:)");
            dbm_lib_name->deactivate();
          } // Fl_Input* dbm_lib_name
          { Fl_Button* o = new Fl_Button(240, 140, 152, 28, " (New Source... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 176, 152, 28, " (Add Source... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 212, 152, 28, " (Add Library... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 248, 152, 28, " (Add Dependency... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 284, 152, 28, " (Add External Item... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 320, 152, 28, " (Remove Test...)");
            o->deactivate();
          } // Fl_Button* o
          dbm_lib->end();
        } // Fl_Group* dbm_lib
        { dbm_test = new Fl_Group(216, 92, 200, 272);
          dbm_test->hide();
          { dbm_test_name = new Fl_Input(280, 108, 111, 24, "(Name:)");
            dbm_test_name->deactivate();
          } // Fl_Input* dbm_test_name
          { Fl_Button* o = new Fl_Button(240, 140, 152, 28, " (New Source... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 176, 152, 28, " (Add Source... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 212, 152, 28, " (Add Library... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 248, 152, 28, " (Add Dependency... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 284, 152, 28, " (Add External Item... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 320, 152, 28, " (Remove Test...)");
            o->deactivate();
          } // Fl_Button* o
          dbm_test->end();
        } // Fl_Group* dbm_test
        { dbm_sources = new Fl_Group(216, 92, 200, 128);
          dbm_sources->hide();
          { Fl_Button* o = new Fl_Button(240, 104, 152, 28, " (New Source... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 140, 152, 28, " (Add Source... )");
            o->deactivate();
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(240, 176, 152, 28, " (Remove All Sources...)");
            o->deactivate();
          } // Fl_Button* o
          dbm_sources->end();
        } // Fl_Group* dbm_sources
        { dbm_source = new Fl_Group(216, 92, 200, 52);
          { Fl_Button* o = new Fl_Button(240, 104, 152, 28, " (Remove Source... )");
            o->deactivate();
          } // Fl_Button* o
          dbm_source->end();
        } // Fl_Group* dbm_source
        dbm_wizard->end();
      } // Fl_Wizard* dbm_wizard
      o->end();
    } // Fl_Group* o
    { Fl_Button* o = new Fl_Button(324, 460, 92, 28, "( Close )");
      o->deactivate();
    } // Fl_Button* o
    dbmanager_window->end();
  } // Fl_Double_Window* dbmanager_window
  return dbmanager_window;
}

//
// End of "$Id: ide_support_ui.fl 6614 2009-01-01 16:11:32Z matt $".
//
